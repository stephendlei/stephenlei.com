@mixin border-radius($radius) {
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	-ms-border-radius: $radius;
	border-radius: $radius;
}

@mixin border-box {
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
}

@mixin box-shadow($horz, $vert, $blur, $spread, $color, $inset: false) {
	@if $inset {
		-webkit-box-shadow:inset $horz $vert $blur $spread $color;
		-moz-box-shadow:inset $horz $vert $blur $spread $color;
		box-shadow:inset $horz $vert $blur $spread $color;
  	} @else {
		-webkit-box-shadow: $horz $vert $blur $spread $color;
		-moz-box-shadow: $horz $vert $blur $spread $color;
		box-shadow: $horz $vert $blur $spread $color;
  	}
}

// Generic Transforms
@mixin transform($transforms) {
	-moz-transform: $transforms;
	-o-transform: $transforms;
	-ms-transform: $transforms;
	-webkit-transform: $transforms;
	transform: $transforms;
}
// rotate
@mixin rotate ($deg) {
	@include transform(rotate(#{$deg}deg));
}
// scale
@mixin scale($scale) {
	 @include transform(scale($scale));
} 
// translate
@mixin translate ($x, $y) {
   @include transform(translate($x, $y));
}
// skew
@mixin skew ($x, $y) {
   @include transform(skew(#{$x}deg, #{$y}deg));
}
//transform origin
@mixin transform-origin ($origin) {
	moz-transform-origin: $origin;
	-o-transform-origin: $origin;
	-ms-transform-origin: $origin;
	-webkit-transform-origin: $origin;
	transform-origin: $origin;
}

//Transitions
@mixin transition($transition...) {
	-moz-transition:    $transition;
	-o-transition:      $transition;
	-webkit-transition: $transition;
	transition:         $transition;
}
@mixin transition-property($property...) {
	-moz-transition-property:		$property;
	-o-transition-property:			$property;
	-webkit-transition-property:	$property;
	transition-property:			$property;
}
@mixin transition-duration($duration...) {
	-moz-transition-property:		$duration;
	-o-transition-property:			$duration;
	-webkit-transition-property:	$duration;
	transition-property:			$duration;
}
@mixin transition-timing-function($timing...) {
	-moz-transition-timing-function:	$timing;
	-o-transition-timing-function:		$timing;
	-webkit-transition-timing-function:	$timing;
	transition-timing-function:			$timing;
}
@mixin transition-delay($delay...) {
	-moz-transition-delay:		$delay;
	-o-transition-delay:		$delay;
	-webkit-transition-delay:	$delay;
	transition-delay:			$delay;
}

@mixin calc($property, $expression) {
	#{$property}: -webkit-calc(#{$expression});
	#{$property}: calc(#{$expression});
}

@mixin no-select {
	-moz-user-select: -moz-none;
	-khtml-user-select: none;
	-webkit-user-select: none;
	-o-user-select: none;
	user-select: none;
}

@mixin linear-gradient($args...) {
	background-image: -o-linear-gradient($args); 
	background-image: -moz-linear-gradient($args); 
	background-image: -webkit-linear-gradient($args); 
	background-image: linear-gradient($args); 
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};      
}

//media query variable from _variables.scss
@mixin mq($point) {
	
	@if $point == xsmall {
		@media #{$mq-xsmall} { @content; }
	}
	@else if $point == small {
		@media #{$mq-small} { @content; }
	}
	@else if $point == medium {
		@media #{$mq-medium}  { @content; }
	}
	@else if $point == large {
		@media #{$mq-large}  { @content; }
	}
	@else if $point == xlarge {
		@media #{$mq-xlarge}  { @content; }
	}
	@else if $point == medium-large {
		@media #{$mq-medium-large}  { @content; }
	}
	@else if $point == xsmall-medium {
		@media #{$mq-xsmall-medium}  { @content; }
	}
	@else if $point == xsmall-small {
		@media #{$mq-xsmall-small}  { @content; }
	}
}
